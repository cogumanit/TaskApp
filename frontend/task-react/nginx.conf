# /etc/nginx/nginx.conf

events {}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss;
    gzip_min_length 256;

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # ✅ Proxy all API calls to ASP.NET backend container
        location /api/ {
            proxy_pass http://backend:80;  # "backend" is the service name in docker-compose
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Optional: add CORS headers (only if backend doesn't handle it)
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization, Origin, X-Requested-With, Content-Type, Accept';
        }

        # ✅ React Router support — redirects everything to index.html
        location / {
            try_files $uri /index.html;
        }

        # Cache static assets for performance
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|ttf|svg|eot)$ {
            expires 6M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Disable caching for index.html to always load the latest React build
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
}
